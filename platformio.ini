; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
platform = teensy
board = teensy41
framework = arduino
; Disable the inbuilt framework lib so I can use my own fork
lib_ignore = USBHost_t36

src_filter =
    +<*.cpp> +<*.c>
    +<printf/*.c>

    ; USB Device Library
    +<usbd/*.c> +<usbd/*.cpp>
    +<usbd/xid_driver/*.c>
    +<usbd/tinyusb/src/*.c>
    +<usbd/tinyusb/src/class/*>
    +<usbd/tinyusb/src/common/*.c>
    +<usbd/tinyusb/src/device/*.c>
    +<usbd/tinyusb/src/portable/nxp/transdimension/*.c>
    +<usbd/tinyusb/hw/mcu/nxp/mcux-sdk/devices/MIMXRT1062/*.c>

    ; USB Host Library
    +<usbh/USBHost_t36/*.cpp>

build_flags =
    -Isrc/
    -Isrc/printf

    ; USB Device Library
    -Isrc/usbd/tinyusb/src
    -Isrc/usbd
    -Isrc/usbd/xid_driver
    -Isrc/usbd/tinyusb/hw/mcu/nxp/mcux-sdk/CMSIS/Include
    -Isrc/usbd/tinyusb/hw/mcu/nxp/mcux-sdk/devices/MIMXRT1062
    -DCPU_MIMXRT1062DVL6A
    -DCFG_TUSB_MCU=OPT_MCU_MIMXRT10XX
    -DCFG_TUSB_DEBUG=0 ;1,2 or 3
    -DBOARD_DEVICE_RHPORT_SPEED=OPT_MODE_FULL_SPEED
    -DCFG_TUSB_DEBUG_PRINTF="tusb_printf_hook"

    ; USB Host Library
    -Isrc/usbh/USBHost_t36

;You can combine these to create a compositive USB device.
;However most of these combinations wont work on OG Xbox hardware :(
[env:DUKE]
build_flags = 
    ${env.build_flags}
    -DXID_DUKE=1
    -DXID_STEELBATTALION=0
    -DXID_XREMOTE=0
    -DMSC_XMU=0
    -DXMU_SIZE_MB=8

[env:TEST]
build_flags = 
    ${env.build_flags}
    -DXID_DUKE=1
    -DXID_STEELBATTALION=1
    -DXID_XREMOTE=1
    -DMSC_XMU=1
    -DXMU_SIZE_MB=8
